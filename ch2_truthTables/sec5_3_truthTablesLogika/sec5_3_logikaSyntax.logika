Example: Predicate logic to English
Suppose our domain is animals and that we have the following two predicates:

isMouse(x): whether animal x is a mouse
inHouse(x): whether animal x is in the house
Suppose we also have that Squeaky is an individual in our domain.

isMouse(Squeaky) ∧ ¬inHouse(Squeaky)
--> "Squeaky is a mouse, and Squeaky is not in the house."


∃ x isMouse(x)
--> "There is a mouse".

¬(∃ x isMouse(x))
--> "There is not a mouse."


∃ x ¬isMouse(x)
--> "There is an animal that is not a mouse".


∀ x isMouse(x)
--> "All animals are mice."


¬(∀ x isMouse(x))
--> "Not all animals are mice."

∀ x ¬isMouse(x)
--> "All animals are not mice."


∀ x (isMouse(x) → inHouse(x))
--> "All mice are in the house."


∀ x (isMouse(x) ∧ inHouse(x))
--> "Every animal is a mouse and is in the house." (We usually don't want ∧ with ∀.)


¬(∀ x (isMouse(x) → inHouse(x)))
--> "Not all mice are in the house."


∀ x (inHouse(x) → isMouse(x))
--> "Everything in the house is a mouse."

¬(∀ x (inHouse(x) → isMouse(x)))
--> "Not everything in the house is a mouse."

∃ x (isMouse(x) ∧ inHouse(x))
--> "There is a mouse in the house."

∃ x (isMouse(x) → inHouse(x))
--> "There exists an animal, and if that animal is a mouse, then it is in the house." Recall that this statement will be true if there is an animal that is NOT a mouse (since the → would be vacuously true) as well as being true if there is a mouse in the house.

¬(∃ x (isMouse(x) ∧ inHouse(x)))
--> "There is not a mouse in the house."
